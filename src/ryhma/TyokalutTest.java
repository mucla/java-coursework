package ryhma;
// Generated by ComTest BEGIN
import java.io.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import ryhma.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2017.07.06 16:35:30 // Generated by ComTest
 *
 */
public class TyokalutTest {


  // Generated by ComTest BEGIN  // Tyokalut: 23

  private Tyokalut kalut; 
  private String tiedNimi; 
  private File ftied; 

  @Before
  public void alusta() throws SailoException {
     tiedNimi = "testikelmit"; 
     ftied = new File(tiedNimi+".db"); 
     ftied.delete(); 
     kalut = new Tyokalut(tiedNimi); 
  }

  @After
  public void siivoa() {
     ftied.delete(); 
  }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaTyokalut108 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaTyokalut108() throws SailoException {    // Tyokalut: 108
    Tyokalu vasara21 = new Tyokalu(2); vasara21.vastaaVasara(2); kalut.lisaa(vasara21); 
    Tyokalu vasara11 = new Tyokalu(1); vasara11.vastaaVasara(1); kalut.lisaa(vasara11); 
    Tyokalu vasara22 = new Tyokalu(2); vasara22.vastaaVasara(2); kalut.lisaa(vasara22); 
    Tyokalu vasara12 = new Tyokalu(1); vasara12.vastaaVasara(1); kalut.lisaa(vasara12); 
    Tyokalu vasara23 = new Tyokalu(2); vasara23.vastaaVasara(2); kalut.lisaa(vasara23); 
    Tyokalu vasara51 = new Tyokalu(5); vasara51.vastaaVasara(5); kalut.lisaa(vasara51); 
    List<Tyokalu> loytyneet; 
    loytyneet = kalut.annaTyokalut(3); 
    assertEquals("From: Tyokalut line: 121", 0, loytyneet.size()); 
    loytyneet = kalut.annaTyokalut(1); 
    assertEquals("From: Tyokalut line: 123", 2, loytyneet.size()); 
    assertEquals("From: Tyokalut line: 125", vasara11, loytyneet.get(0)); 
    assertEquals("From: Tyokalut line: 126", vasara12, loytyneet.get(1)); 
    loytyneet = kalut.annaTyokalut(5); 
    assertEquals("From: Tyokalut line: 129", 1, loytyneet.size()); 
    assertEquals("From: Tyokalut line: 130", vasara51, loytyneet.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi203 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi203() throws SailoException {    // Tyokalut: 203
    Tyokalu vasara = new Tyokalu(); vasara.vastaaVasara(1); 
    Tyokalu vasara2 = new Tyokalu(); vasara2.vastaaVasara(1); 
    kalut.lisaa(vasara); 
    kalut.lisaa(vasara2); 
    try {
    kalut.lisaa(vasara2); 
    fail("Tyokalut: 210 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); } // ei saa lisätä sama id:tä uudelleen
    Collection<Tyokalu> loydetyt; 
    loydetyt = kalut.etsi("",-1); 
    assertEquals("From: Tyokalut line: 213", 2, loydetyt.size()); 
    assertEquals("From: Tyokalut line: 214", vasara, loydetyt.iterator().next()); 
    loydetyt = kalut.etsi(""+vasara.getTyokaluNro(), 1); 
    assertEquals("From: Tyokalut line: 216", 2, loydetyt.size());  //koska nro on sama, löydetään kaksi
    Iterator<Tyokalu> i = loydetyt.iterator(); 
    assertEquals("From: Tyokalut line: 218", vasara, i.next()); 
    assertEquals("From: Tyokalut line: 219", vasara2, i.next()); 
    loydetyt = kalut.etsi(""+vasara2.getTunnusNro(), 0); 
    assertEquals("From: Tyokalut line: 221", 1, loydetyt.size()); 
    assertEquals("From: Tyokalut line: 222", vasara2, loydetyt.iterator().next()); 
    try {
    loydetyt = kalut.etsi("",9); 
    fail("Tyokalut: 223 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    ftied.delete(); 
  } // Generated by ComTest END
}